Source: Dan Callaghan <djc@djc.id.au>
Upstream: http://genshi.edgewall.org/ticket/258
Reason: bug fix

diff -r 66f293fadcc5 -r 2256364c3a98 genshi/_speedups.c
--- Genshi-0.5.1/genshi/_speedups.c	Sun Aug 31 19:15:36 2008 +1000
+++ Genshi-0.5.1/genshi/_speedups.c	Sun Aug 31 19:19:36 2008 +1000
@@ -229,40 +229,36 @@
 static PyObject *
 Markup_join(PyObject *self, PyObject *args, PyObject *kwds)
 {
-    static char *kwlist[] = {"seq", "escape_quotes", 0};
-    PyObject *seq = NULL, *seq2, *tmp, *tmp2;
+    static char *kwlist[] = {"iterable", "escape_quotes", 0};
+    PyObject *iterable = NULL, *iterator, *iteritem, *seq2, *tmp, *tmp2;
     char quotes = 1;
-    int n, i;
 
-    if (!PyArg_ParseTupleAndKeywords(args, kwds, "O|b", kwlist, &seq, &quotes)) {
+    if (!PyArg_ParseTupleAndKeywords(args, kwds, "O|b", kwlist, 
+            &iterable, &quotes)) {
         return NULL;
     }
-    if (!PySequence_Check(seq)) {
-        PyErr_FromString(PyExc_TypeError, "a sequence is required");
+    iterator = PyObject_GetIter(iterable);
+    if (iterator == NULL)
         return NULL;
-    }
-    n = PySequence_Size(seq);
-    if (n < 0) {
-        return NULL;
-    }
-    seq2 = PyTuple_New(n);
+    seq2 = PyList_New(0);
     if (seq2 == NULL) {
         return NULL;
     }
-    for (i = 0; i < n; i++) {
-        tmp = PySequence_GetItem(seq, i);
-        if (tmp == NULL) {
-            Py_DECREF(seq2);
-            return NULL;
-        }
-        tmp2 = escape(tmp, quotes);
+    while ((iteritem = PyIter_Next(iterator))) {
+        tmp2 = escape(iteritem, quotes);
+        Py_DECREF(iteritem);
         if (tmp2 == NULL) {
             Py_DECREF(seq2);
             return NULL;
         }
-        PyTuple_SET_ITEM(seq2, i, tmp2);
-        Py_DECREF(tmp);
+        if (PyList_Append(seq2, tmp2) < 0) {
+            Py_DECREF(tmp2);
+            return NULL;
+        }
+        Py_DECREF(tmp2);
     }
+    if (PyErr_Occurred()) // in PyIter_Next above
+        return NULL;
     tmp = PyUnicode_Join(self, seq2);
     Py_DECREF(seq2);
     if (tmp == NULL)
diff -r 66f293fadcc5 -r 2256364c3a98 genshi/tests/core.py
--- Genshi-0.5.1/genshi/tests/core.py	Sun Aug 31 19:15:36 2008 +1000
+++ Genshi-0.5.1/genshi/tests/core.py	Sun Aug 31 19:19:36 2008 +1000
@@ -136,6 +136,16 @@
         assert type(markup) is Markup
         self.assertEquals('foo<br />&lt;bar /&gt;<br /><baz />', markup)
 
+    def test_join_iterable(self):
+        """
+        Tests calling Markup.join with an argument which is iterable, but not 
+        a sequence.
+        """
+        markup = Markup('<br />').join(x for x in 
+                ['foo', '<bar />', Markup('<baz />')])
+        assert type(markup) is Markup
+        self.assertEquals('foo<br />&lt;bar /&gt;<br /><baz />', markup)
+
     def test_join_wrongtype(self):
         """
         Tests calling Markup.join with an argument whose type is nonsensical.
